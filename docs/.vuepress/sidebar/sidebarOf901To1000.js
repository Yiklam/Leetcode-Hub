let path = "/901-1000/";
module.exports = [
  path + "leetcode_901_online-stock-span.md",
  path + "leetcode_902_numbers-at-most-n-given-digit-set.md",
  path + "leetcode_903_valid-permutations-for-di-sequence.md",
  path + "leetcode_904_fruit-into-baskets.md",
  path + "leetcode_905_sort-array-by-parity.md",
  path + "leetcode_906_super-palindromes.md",
  path + "leetcode_907_sum-of-subarray-minimums.md",
  path + "leetcode_908_smallest-range-i.md",
  path + "leetcode_909_snakes-and-ladders.md",
  path + "leetcode_910_smallest-range-ii.md",
  path + "leetcode_911_online-election.md",
  path + "leetcode_912_sort-an-array.md",
  path + "leetcode_913_cat-and-mouse.md",
  path + "leetcode_914_x-of-a-kind-in-a-deck-of-cards.md",
  path + "leetcode_915_partition-array-into-disjoint-intervals.md",
  path + "leetcode_916_word-subsets.md",
  path + "leetcode_917_reverse-only-letters.md",
  path + "leetcode_918_maximum-sum-circular-subarray.md",
  path + "leetcode_919_complete-binary-tree-inserter.md",
  path + "leetcode_920_number-of-music-playlists.md",
  path + "leetcode_921_minimum-add-to-make-parentheses-valid.md",
  path + "leetcode_922_sort-array-by-parity-ii.md",
  path + "leetcode_923_3sum-with-multiplicity.md",
  path + "leetcode_924_minimize-malware-spread.md",
  path + "leetcode_925_long-pressed-name.md",
  path + "leetcode_926_flip-string-to-monotone-increasing.md",
  path + "leetcode_927_three-equal-parts.md",
  path + "leetcode_928_minimize-malware-spread-ii.md",
  path + "leetcode_929_unique-email-addresses.md",
  path + "leetcode_930_binary-subarrays-with-sum.md",
  path + "leetcode_931_minimum-falling-path-sum.md",
  path + "leetcode_932_beautiful-array.md",
  path + "leetcode_933_number-of-recent-calls.md",
  path + "leetcode_934_shortest-bridge.md",
  path + "leetcode_935_knight-dialer.md",
  path + "leetcode_936_stamping-the-sequence.md",
  path + "leetcode_937_reorder-data-in-log-files.md",
  path + "leetcode_938_range-sum-of-bst.md",
  path + "leetcode_939_minimum-area-rectangle.md",
  path + "leetcode_940_distinct-subsequences-ii.md",
  path + "leetcode_941_valid-mountain-array.md",
  path + "leetcode_942_di-string-match.md",
  path + "leetcode_943_find-the-shortest-superstring.md",
  path + "leetcode_944_delete-columns-to-make-sorted.md",
  path + "leetcode_945_minimum-increment-to-make-array-unique.md",
  path + "leetcode_946_validate-stack-sequences.md",
  path + "leetcode_947_most-stones-removed-with-same-row-or-column.md",
  path + "leetcode_948_bag-of-tokens.md",
  path + "leetcode_949_largest-time-for-given-digits.md",
  path + "leetcode_950_reveal-cards-in-increasing-order.md",
  path + "leetcode_951_flip-equivalent-binary-trees.md",
  path + "leetcode_952_largest-component-size-by-common-factor.md",
  path + "leetcode_953_verifying-an-alien-dictionary.md",
  path + "leetcode_954_array-of-doubled-pairs.md",
  path + "leetcode_955_delete-columns-to-make-sorted-ii.md",
  path + "leetcode_956_tallest-billboard.md",
  path + "leetcode_957_prison-cells-after-n-days.md",
  path + "leetcode_958_check-completeness-of-a-binary-tree.md",
  path + "leetcode_959_regions-cut-by-slashes.md",
  path + "leetcode_960_delete-columns-to-make-sorted-iii.md",
  path + "leetcode_961_n-repeated-element-in-size-2n-array.md",
  path + "leetcode_962_maximum-width-ramp.md",
  path + "leetcode_963_minimum-area-rectangle-ii.md",
  path + "leetcode_964_least-operators-to-express-number.md",
  path + "leetcode_965_univalued-binary-tree.md",
  path + "leetcode_966_vowel-spellchecker.md",
  path + "leetcode_967_numbers-with-same-consecutive-differences.md",
  path + "leetcode_968_binary-tree-cameras.md",
  path + "leetcode_969_pancake-sorting.md",
  path + "leetcode_970_powerful-integers.md",
  path + "leetcode_971_flip-binary-tree-to-match-preorder-traversal.md",
  path + "leetcode_972_equal-rational-numbers.md",
  path + "leetcode_973_k-closest-points-to-origin.md",
  path + "leetcode_974_subarray-sums-divisible-by-k.md",
  path + "leetcode_975_odd-even-jump.md",
  path + "leetcode_976_largest-perimeter-triangle.md",
  path + "leetcode_977_squares-of-a-sorted-array.md",
  path + "leetcode_978_longest-turbulent-subarray.md",
  path + "leetcode_979_distribute-coins-in-binary-tree.md",
  path + "leetcode_980_unique-paths-iii.md",
  path + "leetcode_981_time-based-key-value-store.md",
  path + "leetcode_982_triples-with-bitwise-and-equal-to-zero.md",
  path + "leetcode_983_minimum-cost-for-tickets.md",
  path + "leetcode_984_string-without-aaa-or-bbb.md",
  path + "leetcode_985_sum-of-even-numbers-after-queries.md",
  path + "leetcode_986_interval-list-intersections.md",
  path + "leetcode_987_vertical-order-traversal-of-a-binary-tree.md",
  path + "leetcode_988_smallest-string-starting-from-leaf.md",
  path + "leetcode_989_add-to-array-form-of-integer.md",
  path + "leetcode_990_satisfiability-of-equality-equations.md",
  path + "leetcode_991_broken-calculator.md",
  path + "leetcode_992_subarrays-with-k-different-integers.md",
  path + "leetcode_993_cousins-in-binary-tree.md",
  path + "leetcode_994_rotting-oranges.md",
  path + "leetcode_995_minimum-number-of-k-consecutive-bit-flips.md",
  path + "leetcode_996_number-of-squareful-arrays.md",
  path + "leetcode_997_find-the-town-judge.md",
  path + "leetcode_998_maximum-binary-tree-ii.md",
  path + "leetcode_999_available-captures-for-rook.md",
  path + "leetcode_1000_minimum-cost-to-merge-stones.md",
];
