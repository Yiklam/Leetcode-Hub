let path = "/801-900/";
module.exports = [
  path + "leetcode_801_minimum-swaps-to-make-sequences-increasing.md",
  path + "leetcode_802_find-eventual-safe-states.md",
  path + "leetcode_803_bricks-falling-when-hit.md",
  path + "leetcode_805_split-array-with-same-average.md",
  path + "leetcode_806_number-of-lines-to-write-string.md",
  path + "leetcode_808_soup-servings.md",
  path + "leetcode_809_expressive-words.md",
  path + "leetcode_810_chalkboard-xor-game.md",
  path + "leetcode_811_subdomain-visit-count.md",
  path + "leetcode_812_largest-triangle-area.md",
  path + "leetcode_813_largest-sum-of-averages.md",
  path + "leetcode_814_binary-tree-pruning.md",
  path + "leetcode_815_bus-routes.md",
  path + "leetcode_816_ambiguous-coordinates.md",
  path + "leetcode_817_linked-list-components.md",
  path + "leetcode_818_race-car.md",
  path + "leetcode_819_most-common-word.md",
  path + "leetcode_820_short-encoding-of-words.md",
  path + "leetcode_821_shortest-distance-to-a-character.md",
  path + "leetcode_822_card-flipping-game.md",
  path + "leetcode_823_binary-trees-with-factors.md",
  path + "leetcode_824_goat-latin.md",
  path + "leetcode_825_friends-of-appropriate-ages.md",
  path + "leetcode_826_most-profit-assigning-work.md",
  path + "leetcode_827_making-a-large-island.md",
  path + "leetcode_828_unique-letter-string.md",
  path + "leetcode_829_consecutive-numbers-sum.md",
  path + "leetcode_830_positions-of-large-groups.md",
  path + "leetcode_831_masking-personal-information.md",
  path + "leetcode_832_flipping-an-image.md",
  path + "leetcode_833_find-and-replace-in-string.md",
  path + "leetcode_835_image-overlap.md",
  path + "leetcode_836_rectangle-overlap.md",
  path + "leetcode_837_new-21-game.md",
  path + "leetcode_838_push-dominoes.md",
  path + "leetcode_839_similar-string-groups.md",
  path + "leetcode_841_keys-and-rooms.md",
  path + "leetcode_842_split-array-into-fibonacci-sequence.md",
  path + "leetcode_844_backspace-string-compare.md",
  path + "leetcode_845_longest-mountain-in-array.md",
  path + "leetcode_846_hand-of-straights.md",
  path + "leetcode_847_shortest-path-visiting-all-nodes.md",
  path + "leetcode_848_shifting-letters.md",
  path + "leetcode_849_maximize-distance-to-closest-person.md",
  path + "leetcode_850_rectangle-area-ii.md",
  path + "leetcode_852_peak-index-in-a-mountain-array.md",
  path + "leetcode_853_car-fleet.md",
  path + "leetcode_854_k-similar-strings.md",
  path + "leetcode_855_exam-room.md",
  path + "leetcode_856_score-of-parentheses.md",
  path + "leetcode_857_minimum-cost-to-hire-k-workers.md",
  path + "leetcode_858_mirror-reflection.md",
  path + "leetcode_859_buddy-strings.md",
  path + "leetcode_860_lemonade-change.md",
  path + "leetcode_861_score-after-flipping-matrix.md",
  path + "leetcode_862_shortest-subarray-with-sum-at-least-k.md",
  path + "leetcode_864_shortest-path-to-get-all-keys.md",
  path + "leetcode_865_smallest-subtree-with-all-the-deepest-nodes.md",
  path + "leetcode_866_prime-palindrome.md",
  path + "leetcode_867_transpose-matrix.md",
  path + "leetcode_868_binary-gap.md",
  path + "leetcode_869_reordered-power-of-2.md",
  path + "leetcode_870_advantage-shuffle.md",
  path + "leetcode_871_minimum-number-of-refueling-stops.md",
  path + "leetcode_872_leaf-similar-trees.md",
  path + "leetcode_873_length-of-longest-fibonacci-subsequence.md",
  path + "leetcode_874_walking-robot-simulation.md",
  path + "leetcode_875_koko-eating-bananas.md",
  path + "leetcode_876_middle-of-the-linked-list.md",
  path + "leetcode_877_stone-game.md",
  path + "leetcode_878_nth-magical-number.md",
  path + "leetcode_879_profitable-schemes.md",
  path + "leetcode_880_decoded-string-at-index.md",
  path + "leetcode_881_boats-to-save-people.md",
  path + "leetcode_882_reachable-nodes-in-subdivided-graph.md",
  path + "leetcode_883_projection-area-of-3d-shapes.md",
  path + "leetcode_884_uncommon-words-from-two-sentences.md",
  path + "leetcode_885_spiral-matrix-iii.md",
  path + "leetcode_886_possible-bipartition.md",
  path + "leetcode_887_super-egg-drop.md",
  path + "leetcode_888_fair-candy-swap.md",
  path + "leetcode_889_construct-binary-tree-from-preorder-and-postorder-traversal.md",
  path + "leetcode_890_find-and-replace-pattern.md",
  path + "leetcode_891_sum-of-subsequence-widths.md",
  path + "leetcode_892_surface-area-of-3d-shapes.md",
  path + "leetcode_893_groups-of-special-equivalent-strings.md",
  path + "leetcode_894_all-possible-full-binary-trees.md",
  path + "leetcode_896_monotonic-array.md",
  path + "leetcode_898_bitwise-ors-of-subarrays.md",
  path + "leetcode_899_orderly-queue.md",
];
